{
  "_metadata": {
    "file_version": "v3.1-3d-5.5-1",
    "last_modified": "2025-08-13",
    "clean_architecture": "v3.1 Compliant",
    "configuration_version": "3d.1",
    "description": "Feature flag configuration for NLP crisis detection system",
    "created_date": "2025-08-12",
    "updated_date": "2025-08-12",
    "compliance": "Clean Architecture v3.1 Standards",
    "manager": "FeatureConfigManager",
    "environment_overrides": {
      "description": "All feature flags support environment variable overrides",
      "pattern": "${NLP_FEATURE_*CATEGORY*_*FUNCTION*_*SETTING*}",
      "examples": [
        "NLP_FEATURE_CORE_ENSEMBLE_ANALYSIS",
        "NLP_FEATURE_PATTERN_ANALYSIS",
        "NLP_FEATURE_COMMUNITY_VOCAB"
      ]
    }
  },

  "features": {
    "core_system_features": {
      "description": "Core system feature toggles for production crisis detection",
      "ensemble_analysis": "${NLP_FEATURE_CORE_ENSEMBLE_ANALYSIS}",
      "pattern_integration": "${NLP_FEATURE_CORE_PATTERN_INTEGRATION}",
      "staff_review_logic": "${NLP_FEATURE_CORE_STAFF_REVIEW_LOGIC}",
      "safety_controls": "${NLP_FEATURE_CORE_SAFETY_CONTROLS}",
      "defaults": {
        "ensemble_analysis": true,
        "pattern_integration": true,
        "staff_review_logic": true,
        "safety_controls": true
      },
      "validation": {
        "ensemble_analysis": {
          "type": "boolean",
          "required": true,
          "description": "Three-model ensemble analysis is critical for accuracy"
        },
        "pattern_integration": {
          "type": "boolean", 
          "required": true,
          "description": "Crisis pattern integration essential for detection"
        },
        "staff_review_logic": {
          "type": "boolean",
          "required": false,
          "description": "Staff review workflow integration"
        },
        "safety_controls": {
          "type": "boolean",
          "required": true,
          "description": "Safety controls prevent dangerous outputs"
        }
      }
    },

    "analysis_component_features": {
      "description": "Analysis component feature toggles for processing pipeline",
      "pattern_analysis": "${NLP_FEATURE_PATTERN_ANALYSIS}",
      "semantic_analysis": "${NLP_FEATURE_SEMANTIC_ANALYSIS}",
      "context_analysis": "${NLP_FEATURE_CONTEXT_ANALYSIS}",
      "defaults": {
        "pattern_analysis": true,
        "semantic_analysis": true,
        "context_analysis": true
      },
      "validation": {
        "pattern_analysis": {
          "type": "boolean",
          "required": false,
          "description": "Pattern-based crisis detection analysis"
        },
        "semantic_analysis": {
          "type": "boolean",
          "required": false,
          "description": "Semantic meaning analysis for context"
        },
        "context_analysis": {
          "type": "boolean",
          "required": false,
          "description": "Contextual analysis of surrounding text"
        }
      }
    },

    "learning_features": {
      "description": "Machine learning and adaptation feature toggles",
      "threshold_learning": "${NLP_FEATURE_THRESHOLD_LEARNING}",
      "defaults": {
        "threshold_learning": false
      },
      "validation": {
        "threshold_learning": {
          "type": "boolean",
          "required": false,
          "description": "Adaptive threshold learning based on outcomes"
        }
      }
    },

    "experimental_features": {
      "description": "Experimental and beta feature toggles",
      "advanced_context": "${NLP_FEATURE_ADVANCED_CONTEXT}",
      "community_vocab": "${NLP_FEATURE_COMMUNITY_VOCAB}",
      "temporal_patterns": "${NLP_FEATURE_TEMPORAL_PATTERNS}",
      "defaults": {
        "advanced_context": false,
        "community_vocab": true,
        "temporal_patterns": true
      },
      "validation": {
        "advanced_context": {
          "type": "boolean",
          "required": false,
          "description": "Advanced contextual analysis algorithms"
        },
        "community_vocab": {
          "type": "boolean",
          "required": false,
          "description": "LGBTQIA+ community-specific vocabulary analysis"
        },
        "temporal_patterns": {
          "type": "boolean",
          "required": false,
          "description": "Time-based pattern analysis"
        }
      }
    },

    "development_debug_features": {
      "description": "Development and debugging feature toggles",
      "detailed_logging": "${NLP_FEATURE_DEBUG_DETAILED_LOGGING}",
      "performance_metrics": "${NLP_FEATURE_DEBUG_PERFORMANCE_METRICS}",
      "reload_on_changes": "${NLP_FEATURE_DEBUG_RELOAD_ON_CHANGES}",
      "flip_sentiment_logic": "${NLP_FEATURE_DEBUG_FLIP_SENTIMENT_LOGIC}",
      "defaults": {
        "detailed_logging": true,
        "performance_metrics": true,
        "reload_on_changes": false,
        "flip_sentiment_logic": false
      },
      "validation": {
        "detailed_logging": {
          "type": "boolean",
          "required": false,
          "description": "Enable detailed debug logging output"
        },
        "performance_metrics": {
          "type": "boolean",
          "required": false,
          "description": "Collect and report performance metrics"
        },
        "reload_on_changes": {
          "type": "boolean",
          "required": false,
          "description": "Hot reload configuration on file changes"
        },
        "flip_sentiment_logic": {
          "type": "boolean",
          "required": false,
          "description": "Flip sentiment logic for testing (DANGEROUS)"
        }
      }
    }
  },

  "feature_dependencies": {
    "description": "Feature dependency configuration and validation rules",
    "dependencies": {
      "pattern_learning": {
        "requires": ["pattern_analysis", "analysis_caching"],
        "description": "Pattern learning requires pattern analysis and caching to be enabled"
      },
      "threshold_learning": {
        "requires": ["ensemble_analysis", "staff_review_logic"],
        "description": "Threshold learning requires ensemble analysis and staff review logic"
      },
      "experimental_features": {
        "requires": ["detailed_logging"],
        "description": "Experimental features require detailed logging for monitoring"
      }
    },
    "conflicts": {
      "flip_sentiment_logic": {
        "conflicts_with": ["safety_controls"],
        "description": "Sentiment logic flipping should not be used with safety controls in production"
      }
    }
  },

  "feature_categories": {
    "description": "Feature categorization for management and UI purposes",
    "production_ready": [
      "ensemble_analysis",
      "pattern_integration", 
      "staff_review_logic",
      "safety_controls",
      "pattern_analysis",
      "semantic_analysis",
      "context_analysis",
      "phrase_extraction",
      "analysis_caching",
      "parallel_processing"
    ],
    "beta_features": [
      "threshold_learning",
      "pattern_learning",
      "community_vocab",
      "temporal_patterns"
    ],
    "experimental": [
      "advanced_context",
      "multi_language"
    ],
    "development_only": [
      "reload_on_changes",
      "flip_sentiment_logic",
      "detailed_logging",
      "performance_metrics"
    ]
  },

  "usage_instructions": {
    "description": "Configuration usage and integration guidelines",
    "manager_integration": "Use FeatureConfigManager with create_feature_config_manager(config_manager)",
    "environment_override_pattern": "Set environment variables using NLP_FEATURE_*CATEGORY*_*FUNCTION* pattern",
    "resilient_operation": "System falls back to safe defaults when configuration is invalid or missing",
    "boolean_conversion": "String values converted: 'true'/'1'/'yes'/'on'/'enabled' → true, others → false",
    "validation_behavior": "Feature dependency validation logs warnings but allows system to continue",
    "production_notes": "Disable development_debug_features in production environments"
  }
}