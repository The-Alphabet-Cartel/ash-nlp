{
  "_metadata": {
    "file_version": "v3.1-3d-10.10-1",
    "last_modified": "2025-08-14",
    "clean_architecture": "v3.1 Compliant",
    "configuration_version": "3d.1",
    "description": "Analysis algorithm parameters for Ash-NLP crisis detection system - controls phrase extraction, pattern learning, semantic analysis, and performance settings",
    "created_date": "2025-08-12",
    "updated_date": "2025-08-14",
    "compliance": "Clean Architecture v3.1 Standards",
    "repository": "https://github.com/the-alphabet-cartel/ash-nlp",
    "community": "The Alphabet Cartel - https://discord.gg/alphabetcartel",
    "migration_status": "Step 10.10 - Environmental Variables Cleanup: Fixed duplicate placeholders to use existing .env.template variables"
  },
  
  "phrase_extraction": {
    "description": "Parameters for extracting meaningful phrases from text during analysis",
    "min_phrase_length": "${NLP_ANALYSIS_MIN_PHRASE_LENGTH}",
    "max_phrase_length": "${NLP_ANALYSIS_MAX_PHRASE_LENGTH}",
    "crisis_focus": "${NLP_ANALYSIS_PHRASE_CRISIS_FOCUS}",
    "community_specific": "${NLP_ANALYSIS_PHRASE_COMMUNITY_SPECIFIC}",
    "min_confidence": "${NLP_ANALYSIS_PHRASE_MIN_CONFIDENCE}",
    "max_results": "${NLP_ANALYSIS_PHRASE_MAX_RESULTS}",
    "defaults": {
      "min_phrase_length": 2,
      "max_phrase_length": 6,
      "crisis_focus": true,
      "community_specific": true,
      "min_confidence": 0.3,
      "max_results": 20
    },
    "validation": {
      "min_phrase_length": {
        "range": [1, 10],
        "type": "integer"
      },
      "max_phrase_length": {
        "range": [2, 20],
        "type": "integer"
      },
      "min_confidence": {
        "range": [0.0, 1.0],
        "type": "float"
      },
      "max_results": {
        "range": [1, 100],
        "type": "integer"
      }
    }
  },
  
  "pattern_learning": {
    "description": "Parameters for learning distinctive crisis patterns from community messages",
    "min_crisis_messages": "${NLP_ANALYSIS_PATTERN_MIN_CRISIS_MESSAGES}",
    "max_phrases_to_analyze": "${NLP_ANALYSIS_PATTERN_MAX_PHRASES_TO_ANALYZE}",
    "min_distinctiveness_ratio": "${NLP_ANALYSIS_PATTERN_MIN_DISTINCTIVENESS_RATIO}",
    "min_frequency": "${NLP_ANALYSIS_PATTERN_MIN_FREQUENCY}",
    "confidence_thresholds": {
      "high_confidence": "${NLP_ANALYSIS_PATTERN_HIGH_CONFIDENCE}",
      "medium_confidence": "${NLP_ANALYSIS_PATTERN_MEDIUM_CONFIDENCE}",
      "low_confidence": "${NLP_ANALYSIS_PATTERN_LOW_CONFIDENCE}"
    },
    "defaults": {
      "min_crisis_messages": 10,
      "max_phrases_to_analyze": 200,
      "min_distinctiveness_ratio": 2.0,
      "min_frequency": 3,
      "confidence_thresholds": {
        "high_confidence": 0.7,
        "medium_confidence": 0.4,
        "low_confidence": 0.1
      }
    },
    "validation": {
      "min_crisis_messages": {
        "range": [1, 1000],
        "type": "integer"
      },
      "max_phrases_to_analyze": {
        "range": [10, 10000],
        "type": "integer"
      },
      "min_distinctiveness_ratio": {
        "range": [1.0, 10.0],
        "type": "float"
      },
      "min_frequency": {
        "range": [1, 100],
        "type": "integer"
      },
      "confidence_thresholds": {
        "range": [0.0, 1.0],
        "type": "float",
        "ordering": "high_confidence > medium_confidence > low_confidence"
      }
    }
  },
  
  "semantic_analysis": {
    "description": "Parameters for semantic and context analysis of crisis indicators",
    "context_window": "${NLP_ANALYSIS_SEMANTIC_CONTEXT_WINDOW}",
    "similarity_threshold": "${NLP_ANALYSIS_SEMANTIC_SIMILARITY_THRESHOLD}",
    "context_boost_weight": "${NLP_ANALYSIS_CONTEXT_BOOST_WEIGHT}",
    "negative_threshold": "${NLP_ANALYSIS_SEMANTIC_NEGATIVE_THRESHOLD}",
    "boost_weights": {
      "high_relevance_boost": "${NLP_ANALYSIS_SEMANTIC_HIGH_RELEVANCE_BOOST}",
      "medium_relevance_boost": "${NLP_ANALYSIS_SEMANTIC_MEDIUM_RELEVANCE_BOOST}",
      "family_rejection_boost": "${NLP_ANALYSIS_SEMANTIC_FAMILY_REJECTION_BOOST}",
      "discrimination_fear_boost": "${NLP_ANALYSIS_SEMANTIC_DISCRIMINATION_FEAR_BOOST}",
      "support_seeking_boost": "${NLP_ANALYSIS_SEMANTIC_SUPPORT_SEEKING_BOOST}"
    },
    "defaults": {
      "context_window": 3,
      "similarity_threshold": 0.75,
      "context_boost_weight": 1.5,
      "negative_threshold": 0.6,
      "boost_weights": {
        "high_relevance_boost": 0.1,
        "medium_relevance_boost": 0.05,
        "family_rejection_boost": 0.15,
        "discrimination_fear_boost": 0.15,
        "support_seeking_boost": -0.05
      }
    },
    "validation": {
      "context_window": {
        "range": [1, 10],
        "type": "integer"
      },
      "similarity_threshold": {
        "range": [0.1, 1.0],
        "type": "float"
      },
      "context_boost_weight": {
        "range": [0.1, 5.0],
        "type": "float"
      },
      "negative_threshold": {
        "range": [0.1, 1.0],
        "type": "float"
      },
      "boost_weights": {
        "range": [-1.0, 1.0],
        "type": "float"
      }
    }
  },
  
  "contextual_weighting": {
    "description": "Parameters for contextual weight adjustments during crisis analysis",
    "temporal_context_weight": "${NLP_ANALYSIS_CONTEXT_TEMPORAL_WEIGHT}",
    "social_context_weight": "${NLP_ANALYSIS_CONTEXT_SOCIAL_WEIGHT}",
    "context_signal_weight": "${NLP_ANALYSIS_CONTEXT_SIGNAL_WEIGHT}",
    "temporal_urgency_multiplier": "${NLP_ANALYSIS_TEMPORAL_URGENCY_MULTIPLIER}",
    "community_awareness_boost": "${NLP_ANALYSIS_COMMUNITY_AWARENESS_BOOST}",
    "defaults": {
      "temporal_context_weight": 1.0,
      "social_context_weight": 1.2,
      "context_signal_weight": 1.0,
      "temporal_urgency_multiplier": 1.2,
      "community_awareness_boost": 0.1
    },
    "validation": {
      "temporal_context_weight": {
        "range": [0.1, 5.0],
        "type": "float"
      },
      "social_context_weight": {
        "range": [0.1, 5.0],
        "type": "float"
      },
      "context_signal_weight": {
        "range": [0.1, 5.0],
        "type": "float"
      },
      "temporal_urgency_multiplier": {
        "range": [0.5, 3.0],
        "type": "float"
      },
      "community_awareness_boost": {
        "range": [0.0, 1.0],
        "type": "float"
      }
    }
  },
  
  "integration_settings": {
    "description": "Configuration for analysis component integration",
    "enable_pattern_analysis": "${NLP_FEATURE_PATTERN_ANALYSIS}",
    "enable_semantic_analysis": "${NLP_FEATURE_SEMANTIC_ANALYSIS}",
    "enable_phrase_extraction": "${NLP_FEATURE_PHRASE_EXTRACTION}",
    "enable_pattern_learning": "${NLP_FEATURE_PATTERN_LEARNING}",
    "integration_mode": "${NLP_ANALYSIS_INTEGRATION_MODE}",
    "defaults": {
      "enable_pattern_analysis": false,
      "enable_semantic_analysis": false,
      "enable_phrase_extraction": false,
      "enable_pattern_learning": false,
      "integration_mode": "full"
    },
    "validation": {
      "integration_mode": {
        "choices": ["full", "enhanced", "basic", "minimal"],
        "type": "string"
      }
    }
  },
  
  "performance_settings": {
    "description": "Performance and resource management parameters",
    "timeout_ms": "${NLP_PERFORMANCE_ANALYSIS_TIMEOUT_MS}",
    "max_concurrent": "${NLP_PERFORMANCE_ANALYSIS_MAX_CONCURRENT}",
    "enable_caching": "${NLP_FEATURE_ANALYSIS_CACHING}",
    "cache_ttl_seconds": "${NLP_PERFORMANCE_ANALYSIS_CACHE_TTL}",
    "enable_parallel_processing": "${NLP_FEATURE_PARALLEL_PROCESSING}",
    "defaults": {
      "timeout_ms": 5000,
      "max_concurrent": 10,
      "enable_caching": false,
      "cache_ttl_seconds": 300,
      "enable_parallel_processing": false
    },
    "validation": {
      "timeout_ms": {
        "range": [1000, 30000],
        "type": "integer"
      },
      "max_concurrent": {
        "range": [1, 100],
        "type": "integer"
      },
      "cache_ttl_seconds": {
        "range": [60, 3600],
        "type": "integer"
      }
    }
  },
  
  "debugging_settings": {
    "description": "Parameters for debugging and development",
    "enable_detailed_logging": "${NLP_LOGGING_ENABLE_DETAILED}",
    "log_analysis_steps": "${NLP_LOGGING_ANALYSIS_STEPS}",
    "include_reasoning": "${NLP_LOGGING_INCLUDE_REASONING}",
    "enable_timing_metrics": "${NLP_LOGGING_PERFORMANCE_METRICS}",
    "enable_performance_metrics": "${NLP_LOGGING_PERFORMANCE_METRICS}",
    "defaults": {
      "enable_detailed_logging": true,
      "log_analysis_steps": false,
      "include_reasoning": true,
      "save_intermediate_results": false,
      "enable_timing_metrics": true,
      "enable_performance_metrics": true
    },
    "validation": {
      "enable_detailed_logging": {
        "type": "boolean"
      },
      "log_analysis_steps": {
        "type": "boolean"
      },
      "include_reasoning": {
        "type": "boolean"
      },
      "save_intermediate_results": {
        "type": "boolean"
      },
      "enable_timing_metrics": {
        "type": "boolean"
      },
      "enable_performance_metrics": {
        "type": "boolean"
      }
    }
  },

  "crisis_thresholds": {
    "description": "Core crisis threshold settings for analysis algorithms - NOTE: Primary thresholds managed by ThresholdMappingManager in Phase 3c",
    "high": "${NLP_ANALYSIS_CRISIS_THRESHOLD_HIGH}",
    "medium": "${NLP_ANALYSIS_CRISIS_THRESHOLD_MEDIUM}",
    "low": "${NLP_ANALYSIS_CRISIS_THRESHOLD_LOW}",
    "defaults": {
      "high": 0.55,
      "medium": 0.28,
      "low": 0.16
    },
    "validation": {
      "high": {
        "range": [0.3, 1.0],
        "type": "float"
      },
      "medium": {
        "range": [0.1, 0.8],
        "type": "float"
      },
      "low": {
        "range": [0.05, 0.5],
        "type": "float"
      },
      "ordering": "high > medium > low"
    }
  },

  "confidence_boost": {
    "description": "Confidence boost parameters for analysis algorithms",
    "high_confidence_boost": "${NLP_ANALYSIS_CONFIDENCE_BOOST_HIGH}",
    "medium_confidence_boost": "${NLP_ANALYSIS_CONFIDENCE_BOOST_MEDIUM}",
    "low_confidence_boost": "${NLP_ANALYSIS_CONFIDENCE_BOOST_LOW}",
    "pattern_confidence_boost": "${NLP_ANALYSIS_PATTERN_CONFIDENCE_BOOST}",
    "model_confidence_boost": "${NLP_ANALYSIS_MODEL_CONFIDENCE_BOOST}",
    "defaults": {
      "high_confidence_boost": 0.15,
      "medium_confidence_boost": 0.10,
      "low_confidence_boost": 0.05,
      "pattern_confidence_boost": 0.05,
      "model_confidence_boost": 0.0
    },
    "validation": {
      "high_confidence_boost": {
        "range": [0.0, 1.0],
        "type": "float"
      },
      "medium_confidence_boost": {
        "range": [0.0, 1.0],
        "type": "float"
      },
      "low_confidence_boost": {
        "range": [0.0, 1.0],
        "type": "float"
      },
      "pattern_confidence_boost": {
        "range": [0.0, 1.0],
        "type": "float"
      },
      "model_confidence_boost": {
        "range": [0.0, 1.0],
        "type": "float"
      }
    }
  },

  "experimental_features": {
    "description": "Experimental feature flags for testing new functionality",
    "advanced_context": "${NLP_FEATURE_EXPERIMENTAL_ADVANCED_CONTEXT}",
    "community_vocab": "${NLP_FEATURE_EXPERIMENTAL_COMMUNITY_VOCAB}",
    "temporal_patterns": "${NLP_FEATURE_EXPERIMENTAL_TEMPORAL_PATTERNS}",
    "multi_language": "${NLP_FEATURE_EXPERIMENTAL_MULTI_LANGUAGE}",
    "defaults": {
      "advanced_context": false,
      "community_vocab": false,
      "temporal_patterns": false,
      "multi_language": false
    },
    "validation": {
      "advanced_context": {
        "type": "boolean"
      },
      "community_vocab": {
        "type": "boolean"
      },
      "temporal_patterns": {
        "type": "boolean"
      },
      "multi_language": {
        "type": "boolean"
      }
    }
  },

  "learning_system": {
    "description": "Phase 3d Step 4 - Learning system parameters for adaptive threshold adjustment",
    "enabled": "${GLOBAL_ENABLE_LEARNING_SYSTEM}",
    "learning_rate": "${NLP_ANALYSIS_LEARNING_RATE}",
    "min_confidence_adjustment": "${NLP_ANALYSIS_LEARNING_MIN_CONFIDENCE_ADJUSTMENT}",
    "max_confidence_adjustment": "${NLP_ANALYSIS_LEARNING_MAX_CONFIDENCE_ADJUSTMENT}",
    "max_adjustments_per_day": "${NLP_ANALYSIS_LEARNING_MAX_ADJUSTMENTS_PER_DAY}",
    "persistence_file": "${NLP_ANALYSIS_LEARNING_PERSISTENCE_FILE}",
    "feedback_weight": "${NLP_ANALYSIS_LEARNING_FEEDBACK_WEIGHT}",
    "min_samples": "${NLP_ANALYSIS_LEARNING_MIN_SAMPLES}",
    "adjustment_limit": "${NLP_ANALYSIS_LEARNING_ADJUSTMENT_LIMIT}",
    "max_drift": "${NLP_ANALYSIS_LEARNING_MAX_DRIFT}",
    "sensitivity_bounds": {
      "min_global_sensitivity": "${NLP_ANALYSIS_LEARNING_MIN_SENSITIVITY}",
      "max_global_sensitivity": "${NLP_ANALYSIS_LEARNING_MAX_SENSITIVITY}"
    },
    "adjustment_factors": {
      "false_positive_factor": "${NLP_ANALYSIS_LEARNING_FALSE_POSITIVE_FACTOR}",
      "false_negative_factor": "${NLP_ANALYSIS_LEARNING_FALSE_NEGATIVE_FACTOR}"
    },
    "severity_multipliers": {
      "high_severity": "${NLP_ANALYSIS_LEARNING_SEVERITY_HIGH}",
      "medium_severity": "${NLP_ANALYSIS_LEARNING_SEVERITY_MEDIUM}",
      "low_severity": "${NLP_ANALYSIS_LEARNING_SEVERITY_LOW}"
    },
    "defaults": {
      "enabled": true,
      "learning_rate": 0.01,
      "min_confidence_adjustment": 0.05,
      "max_confidence_adjustment": 0.30,
      "max_adjustments_per_day": 50,
      "persistence_file": "./learning_data/adjustments.json",
      "feedback_weight": 0.1,
      "min_samples": 5,
      "adjustment_limit": 0.05,
      "max_drift": 0.1,
      "sensitivity_bounds": {
        "min_global_sensitivity": 0.5,
        "max_global_sensitivity": 1.5
      },
      "adjustment_factors": {
        "false_positive_factor": -0.1,
        "false_negative_factor": 0.1
      },
      "severity_multipliers": {
        "high_severity": 3.0,
        "medium_severity": 2.0,
        "low_severity": 1.0
      }
    },
    "validation": {
      "enabled": {
        "type": "boolean"
      },
      "learning_rate": {
        "range": [0.001, 1.0],
        "type": "float"
      },
      "min_confidence_adjustment": {
        "range": [0.01, 1.0],
        "type": "float"
      },
      "max_confidence_adjustment": {
        "range": [0.05, 1.0],
        "type": "float"
      },
      "max_adjustments_per_day": {
        "range": [1, 1000],
        "type": "integer"
      },
      "feedback_weight": {
        "range": [0.0, 1.0],
        "type": "float"
      },
      "min_samples": {
        "range": [1, 100],
        "type": "integer"
      },
      "adjustment_limit": {
        "range": [0.01, 1.0],
        "type": "float"
      },
      "max_drift": {
        "range": [0.01, 1.0],
        "type": "float"
      },
      "sensitivity_bounds": {
        "range": [0.1, 5.0],
        "type": "float",
        "ordering": "max_global_sensitivity > min_global_sensitivity"
      },
      "adjustment_factors": {
        "range": [-1.0, 1.0],
        "type": "float"
      },
      "severity_multipliers": {
        "range": [0.1, 10.0],
        "type": "float",
        "ordering": "high_severity >= medium_severity >= low_severity"
      }
    }
  }
}